// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: explainer.proto

#include "explainer.pb.h"
#include "explainer.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace explainer {

static const char* ShiFu_method_names[] = {
  "/explainer.ShiFu/TellMeWhy",
};

std::unique_ptr< ShiFu::Stub> ShiFu::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< ShiFu::Stub> stub(new ShiFu::Stub(channel));
  return stub;
}

ShiFu::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_TellMeWhy_(ShiFu_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ShiFu::Stub::TellMeWhy(::grpc::ClientContext* context, const ::explainer::ExplainerRequest& request, ::explainer::ExplainerReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_TellMeWhy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::explainer::ExplainerReply>* ShiFu::Stub::AsyncTellMeWhyRaw(::grpc::ClientContext* context, const ::explainer::ExplainerRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::explainer::ExplainerReply>(channel_.get(), cq, rpcmethod_TellMeWhy_, context, request);
}

ShiFu::Service::Service() {
  AddMethod(new ::grpc::RpcServiceMethod(
      ShiFu_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ShiFu::Service, ::explainer::ExplainerRequest, ::explainer::ExplainerReply>(
          std::mem_fn(&ShiFu::Service::TellMeWhy), this)));
}

ShiFu::Service::~Service() {
}

::grpc::Status ShiFu::Service::TellMeWhy(::grpc::ServerContext* context, const ::explainer::ExplainerRequest* request, ::explainer::ExplainerReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace explainer

